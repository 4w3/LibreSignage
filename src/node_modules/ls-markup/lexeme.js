/*
*  Lexeme object and related functions for the LibreSignage
*  markup parser.
*/

module.exports.Lexeme = class Lexeme {
	constructor(type, raw, ln_num, ln_pos) {
		this.type = type;
		this.raw = raw;
		this.ln_num = ln_num;
		this.ln_pos = ln_pos;
	}

	matches(lexeme) {
		return this.type == lexeme.type;
	}

	ch_type(new_type) {
		this.type = new_type;
	}

	dump() {
		console.log(
			`[@${this.ln_num}:${this.ln_pos}]` +
			`(${this.type}, '${this.raw}')`
		);
	}

	clone() {
		return new module.exports.Lexeme(
			this.type,
			this.raw,
			this.ln_num,
			this.ln_pos
		);
	}
}

module.exports.dump_lexemes = function(lexemes) {
	for (let l of lexemes) { l.dump(); }
}
