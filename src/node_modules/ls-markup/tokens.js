/*
*  Token definitions for the LibreSignage markup parser.
*/

var lexeme = require('./lexeme.js');

module.exports.tokens = {
	BRACK_OPEN: {
		re: /^\[/,
		repr: '['
	},
	BRACK_CLOSE: {
		re: /^\]/,
		repr: ']'
	},
	BRACK_SLASH: {
		re: /^\//,
		repr: '/',
		context: [
			{ '-1': 'BRACK_OPEN' }
		]
	},
	ASSIGN: {
		re: /^=/,
		repr: '=',
		context: [
			{ '-1': 'LITERAL' },
			{ '-2': 'LITERAL', '-1': 'WHITESPACE' }
		],
		transform: (lexemes, i, mcase) => {
			lexemes[i - mcase - 1].ch_type('IDENTIFIER');
		}
	},
	WHITESPACE: {
		re: /^\s+/,
		repr: '(whitespace)'
	},
	TAGNAME: {
		re: /^[A-Za-z0-9_-]+/,
		repr: '(tagname)',
		context: [
			{ '-1': 'BRACK_OPEN' },
			{ '-2': 'BRACK_OPEN', '-1': 'BRACK_SLASH' }
		]
	},
	LITERAL: {
		re: /^[^=\[\]\s]+/,
		repr: '(literal)'
	},

	// Non-matched tokens.
	IDENTIFIER: {
		nomatch: true,
		repr: '(identifier)'
	}
}
