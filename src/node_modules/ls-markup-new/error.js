/*
*  Error definitions for the LibreSignage markup parser.
*/

module.exports.ECODES = {
	'EEOL': {
		code: 0,
		msg: 'Unexpected End Of File'
	},
	'ETOK': {
		code: 1,
		msg: 'Unexpected token'
	},
	'EINVSYN': {
		code: 2,
		msg: 'Invalid syntax'
	}
};

module.exports.MarkupSyntaxError = class MarkupSyntaxError extends Error {
	constructor(code, lexeme, message, file, line) {
		super(message, file, line);
		if (Error.captureStackTrace) {
			Error.captureStackTrace(this, MarkupSyntaxError);
		}

		let ecodes = module.exports.ECODES;
		this.code = ecodes[code];
		this.message = `${this.code.msg}: ${this.message}`;

		if (lexeme) {
			this.message += ` (@ ${lexeme.ln_num}:${lexeme.ln_pos})`;
		}
	}
}
