/*
*  Queue object definition for interfacing with LibreSignage
*  slide queues via the API. The Queue class uses the SlideList
*  class for storing slides, which makes manipulating slide lists
*  very easy.
*/

var slide = require('ls-slide');
var slidelist = require('ls-slidelist');

exports.get_list = function(api, ready) {
	api.call(api.ENDP.QUEUE_LIST, {}, (data) => {
		if (api.handle_disp_error(data['error'])) { return; }
		if (ready) { ready(data.queues); }
	});
}

exports.Queue = class Queue {
	constructor(api) {
		if (!api) {
			throw new Error(
				"Can't create a Queue without a " +
				"valid API object."
			);
		}
		this.api = api;
		this.name = null;
		this.owner = null;
		this.slides = null;
	}

	load(name, ready) {
		var tmp = null;
		var cnt = 0;
		var id = '';

		this.name = name;
		this.slides = new slidelist.SlideList();

		this.api.call(
			this.api.ENDP.QUEUE_GET,
			{'name': name},
			(data) => {
				if (this.api.handle_disp_error(data['error'])) {
					return;
				}
				this.owner = data['owner'];
				cnt = Object.keys(data['slides']).length;
				if (cnt == 0) {
					// Execute callback for empty queues.
					if (ready) { ready(this); }
					return;
				}

				for (let s of Object.values(data['slides'])) {
					id = s['id'];
					this.slides.slides[id] = new slide.Slide(this.api);
					this.slides.slides[id].load(id, false, false, () => {
						if (--cnt == 0 && ready) {
							ready(this);
						}
					});
				}
			}
		);
	}

	update(ready) {
		this.load(this.name, ready);
	}
}
