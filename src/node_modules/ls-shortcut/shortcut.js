/*
*  A system for easily defining shortucts for the LibreSignage webapp.
*/

var $Â = require('jquery');
var util = require('ls-util');

exports.ShortcutController = class ShortcutController {
	/*
	*  Main ShortcutController class that holds information
	*  of all the defined shortcuts and handles running the
	*  attached callback functions.
	*
	*  shortcuts = A list of Shortcut objects to use.
	*/
	constructor(shortcuts) {
		this.shortcuts = shortcuts;
		this.down = [];

		$(document).on('keydown', (e) => {
			this.down.push(e.key);
			for (let s of this.shortcuts) {
				if (s.matches(this.down)) {
					e.preventDefault();
					s.exec();
				}
			}
		});

		$(document).on('keyup', (e) => {
			this.down.splice(this.down.indexOf(e.key), 1);
		});
	}

	reg(shortcut) {
		// Register a new shortcut.
		this.shortcuts.push(shortcut);
	}
}

exports.Shortcut = class Shortcut {
	/*
	*  A class for defining the actual shortcuts.
	*
	*  keys  = An array of keys for the shortcut. The key names
	*          should match the JavaScript key names.
	*  func  = The callback function to execute for the shortcut.
	*  defer = A function used for checking whether to execute
	*          the attached function or not. The function is
	*          executed if defer() == true when the shortcut
	*          is pressed.
	*/
	constructor(keys, func, defer) {
		this.keys = keys;
		this.func = func;
		this.defer = defer;
	}

	matches(keys) { return util.sets_eq(keys, this.keys); }
	exec() {
		if (!this.defer || !this.defer()) {
			this.func();
		} else {
			console.log(
				`Shortcut: '${this.keys.join(' + ')}' deferred.`
			);
		}
	}
}
